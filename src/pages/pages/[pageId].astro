---
import {Notion} from "@/constants/notion.constants";
import Layout from "@/layouts/Layout.astro";
import {httpClient} from "@/utils/http-client";
import {NotionApiTypes} from "@/utils/api/notion.api.types";
import {NotionRenderer} from 'react-notion-x'

import 'react-notion-x/src/styles.css'
import 'prismjs/themes/prism-tomorrow.css'
import 'katex/dist/katex.min.css'

export const prerender = true;

export function getStaticPaths() {
  return Notion.NOTION_PAGES
    .map(i => {
      return {params: {pageId: i}}
    });
}

console.log("Notion.NOTION_PAGES", Notion.NOTION_PAGES)
console.log("getStaticPaths", getStaticPaths())

Astro.locals.cache();

const data = (await httpClient.get<NotionApiTypes.GetPageResponse>("/api/notion/pages/" + Astro.params.pageId, {
  baseURL: Astro.url.origin
})).$;

---

<Layout>
  <NotionRenderer recordMap={data} fullPage={true} darkMode={false}/>
</Layout>
